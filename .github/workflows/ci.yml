name: Laravel CI/CD

on:
  push:
    branches:
      - Testing
      - main
  pull_request:
    branches:
      - Testing
      - main
  workflow_dispatch:

jobs:
  build-js-production:
    name: Build JavaScript/CSS
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: NPM Build
        run: |
          npm install
          npm run dev
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
          retention-days: 3
          
  config-database:
    name: Configuration Database
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: supabase/setup-cli@v1
      with:
        version: latest
    
    - run: supabase db start
    - run: supabase db lint
    - run: supabase test db

  check-database:
    name: Check Database
    runs-on: ubuntu-latest
    needs: [config-database]
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ github.base_ref == 'main' && secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_PROJECT_ID: ${{ github.base_ref == 'main' && secrets.SUPABASE_PROJECT_ID }}
    
    steps:
    - uses: actions/checkout@v4
    - uses: supabase/setup-cli@v1
      with:
        version: latest
    
    - run: supabase link --project-ref $SUPABASE_PROJECT_ID
    - run: supabase db push --dry-run
    
  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [check-database]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Fetch built assets from Artifacts
      uses: actions/download-artifact@v1
      with:
        name: assets
        path: public
        
    - name: Checkout repository   
      uses: actions/checkout@v4

    - name: install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
    - name: Generate key
      run: php artisan key:generate
      
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      
    - name: Run test
      run: |
        php artisan test
