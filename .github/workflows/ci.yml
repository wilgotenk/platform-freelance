name: Laravel CI/CD

on:
  push:
    branches:
      - Testing
      - main
  pull_request:
    branches:
      - Testing
      - main
  workflow_dispatch:

jobs:
  build-js-production:
    name: Build JavaScript/CSS
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: NPM Build
        run: |
          npm install
          npm run dev
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: assets
          path: public
          retention-days: 3

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [build-js-production]
    if: github.ref == 'refs/heads/main'
    # env:
    #   DB_HOST: ${{ secrets.DB_HOST }}
    #   DB_DATABASE: ${{ secrets.DB_DATABASE }}
    #   DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #   DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      postgres:
        image: postgis/postgis:10-2.5
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          # POSTGRES_DB: ${{ secrets.DB_DATABASE }}
        ports:
          - 5432\tcp
        options: |
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 3

    steps:
      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, fileinfo, pgsql

      - name: Copy .env
        run: |
          cp .env.ci .env

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: |
          php artisan key:generate

      - name: Directory Permissions
        run: |
          chmod -R 777 storage bootstrap/cache

      - name: Run Artisan
        run: |
          php artisan test
          php artisan optimize
          php artisan migrate --force
          php artisan db:seed --force
        env:
          APP_ENV: production
          DB_CONNECTION: pgsql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
